package com.mpp.disaster.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DisasterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisasterAllPropertiesEquals(Disaster expected, Disaster actual) {
        assertDisasterAutoGeneratedPropertiesEquals(expected, actual);
        assertDisasterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisasterAllUpdatablePropertiesEquals(Disaster expected, Disaster actual) {
        assertDisasterUpdatableFieldsEquals(expected, actual);
        assertDisasterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisasterAutoGeneratedPropertiesEquals(Disaster expected, Disaster actual) {
        assertThat(actual)
            .as("Verify Disaster auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisasterUpdatableFieldsEquals(Disaster expected, Disaster actual) {
        assertThat(actual)
            .as("Verify Disaster relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getLongitude()).as("check longitude").isEqualTo(expected.getLongitude()))
            .satisfies(a -> assertThat(a.getLatitude()).as("check latitude").isEqualTo(expected.getLatitude()))
            .satisfies(a -> assertThat(a.getRadius()).as("check radius").isEqualTo(expected.getRadius()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisasterUpdatableRelationshipsEquals(Disaster expected, Disaster actual) {
        // empty method
    }
}
