package com.mpp.disaster.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CenterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCenterAllPropertiesEquals(Center expected, Center actual) {
        assertCenterAutoGeneratedPropertiesEquals(expected, actual);
        assertCenterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCenterAllUpdatablePropertiesEquals(Center expected, Center actual) {
        assertCenterUpdatableFieldsEquals(expected, actual);
        assertCenterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCenterAutoGeneratedPropertiesEquals(Center expected, Center actual) {
        assertThat(actual)
            .as("Verify Center auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCenterUpdatableFieldsEquals(Center expected, Center actual) {
        assertThat(actual)
            .as("Verify Center relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getLongitude()).as("check longitude").isEqualTo(expected.getLongitude()))
            .satisfies(a -> assertThat(a.getLatitude()).as("check latitude").isEqualTo(expected.getLatitude()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getAvailableSeats()).as("check availableSeats").isEqualTo(expected.getAvailableSeats()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCenterUpdatableRelationshipsEquals(Center expected, Center actual) {
        // empty method
    }
}
